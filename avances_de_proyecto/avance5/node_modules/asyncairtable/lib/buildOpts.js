"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var queryBuilder_1 = require("./queryBuilder");
exports.default = (function (opts) {
    if (Object.prototype.hasOwnProperty.call(opts, 'filterByFormula') &&
        Object.prototype.hasOwnProperty.call(opts, 'where'))
        throw new Error('Cannot use both where and filterByFormula as they accomplish the same thing');
    var params = Object.keys(opts)
        .map(function (key, i) {
        /** @todo Find a better type than any for this */
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        var opt = opts[key];
        var formatted;
        if (Array.isArray(opt)) {
            formatted = opt
                .map(function (item, j) {
                switch (typeof item) {
                    case 'object':
                        return Object.keys(item)
                            .map(function (subKey) {
                            return key + "[" + j + "][" + subKey + "]=" + item[subKey];
                        })
                            .join('&');
                    case 'string':
                        return key + "[]=" + item;
                }
            })
                .join('&');
        }
        else {
            if (key === 'where') {
                formatted = "filterByFormula=" + queryBuilder_1.default(opt);
            }
            else {
                formatted = key + "=" + opt;
            }
        }
        return i !== 0 ? "&" + formatted : formatted;
    })
        .join('');
    return encodeURI(params);
});
//# sourceMappingURL=buildOpts.js.map